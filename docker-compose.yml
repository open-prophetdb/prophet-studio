version: "3.3"

services:
  label-studio:
    container_name: prophet-studio-label-studio
    # image: heartexlabs/label-studio:1.7.2
    image: nordata/label-studio:${LABEL_STUDIO_VERSION}
    expose:
      - "8080"
    ports:
      - "127.0.0.1:8000:8080"
    networks:
      - clinico-omics-network
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DJANGO_DB=default
      - POSTGRE_NAME=prophet_studio_ls
      - POSTGRE_USER=${POSTGRES_USER}
      - POSTGRE_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRE_PORT=5432
      - POSTGRE_HOST=postgres
      - LABEL_STUDIO_DISABLE_SIGNUP_WITHOUT_LINK=true
      - LABEL_STUDIO_USERNAME=${LABEL_STUDIO_USERNAME}
      - LABEL_STUDIO_PASSWORD=${LABEL_STUDIO_PASSWORD}
      - PUBLICATION_MANAGER_SERVER=${PUBLICATION_MANAGER_SERVER}
      - KNOWLEDGE_GRAPH_SERVER=${KNOWLEDGE_GRAPH_SERVER}
      - HELP_DOC_SERVER=${HELP_DOC_SERVER}
      - JWT_AUTH_COOKIE_DOMAIN=${JWT_AUTH_COOKIE_DOMAIN}
    command: label-studio start -db postgresql
    volumes:
      - ./data/label-studio:/label-studio/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy

  postgres-ml:
    image: nordata/postgresml:2.7.3
    container_name: prophet-studio-postgresql-ml
    restart: "on-failure"
    networks:
      - clinico-omics-network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: prophet_studio_biomedgps
    volumes:
      # If you got the following error: The cluster is owned by user id 105 which does not exist
      # Please run: chown 101:101 data/postgresql-ml && chmod 750 data/postgresql-ml
      - pg_ml_data:/var/lib/postgresql
      - ./conf/entrypoint.sh:/app/entrypoint.sh
      - ./conf/dashboard.sh:/app/dashboard.sh
      # For more details, please read the ./datasets/README.md
      - /data/prophet-studio/datasets:/data/prophet-studio/datasets:rw
    ports:
      - 127.0.0.1:5433:5432
      - 127.0.0.1:8888:8000
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 100

  postgres:
    image: postgres:13
    container_name: prophet-studio-postgresql
    restart: "always"
    networks:
      - clinico-omics-network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: prophet_studio_ls
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data/
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 100

  biomedgps:
    image: nordata/biomedgps:${BIOMEDGPS_VERSION}
    container_name: prophet-studio-biomedgps
    restart: "always"
    networks:
      - clinico-omics-network
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-ml:5432/prophet_studio_biomedgps
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    entrypoint: ["bash", "-c", "biomedgps-cli initdb; biomedgps -H 0.0.0.0 -p 3000 --openapi --ui"]
    volumes:
      # For more details, please read the ./datasets/README.md
      - /data/prophet-studio/datasets:/data/prophet-studio/datasets:rw
    ports:
      - 127.0.0.1:3030:3000
    depends_on:
      postgres-ml:
        condition: service_healthy

  paper-downloader:
    container_name: prophet-studio-paper-downloader
    image: nordata/paper-downloader:${PAPER_DOWNLOADER_VERSION}
    networks:
      - clinico-omics-network
    volumes:
      - ./data/paper-downloader:/data/paper-downloader
    environment:
      - LABEL_STUDIO_SERVER=${LABEL_STUDIO_SERVER}
      - MINIO_SERVER=${MINIO_SERVER}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - LABEL_STUDIO_TOKEN=${LABEL_STUDIO_TOKEN}
      - DINGTALK_ACCESS_KEY=${DINGTALK_ACCESS_KEY}
      - MINUTES_BETWEEN_RUN=${MINUTES_BETWEEN_RUN}
    depends_on:
      label-studio:
        condition: service_healthy
      minio:
        condition: service_healthy
    links:
      - label-studio
      - minio

  minio:
    container_name: "prophet-studio-minio"
    hostname: "minio"
    restart: on-failure
    image: "minio/minio:RELEASE.2021-08-20T18-32-01Z"
    networks:
      - clinico-omics-network
    expose:
      - "9000"
      - "9001"
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    user: "${UID}:${GID}"
    volumes:
      - ./data/paper-downloader:/data/paper-downloader
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data/paper-downloader --console-address :9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  clinico-omics-network:
    external:
      name: clinico-omics-network

volumes:
  pg_ml_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /data/prophet-studio/data/postgresql-ml
